class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Triangl_Skeleton:Default
	{
		skeletonInherit = "Default";
		skeletonBones[] =
		{
			// Pairs: 1st is newly defined bone, second is it`s "parent" in the skeleton (bone hierarchy).
			"Corner_1",				"",
			"Corner_2",				"",
			"Corner_3",				""
		};
	};

};

class CfgModels
{
	class Default // class name must be the same as name of p3d
	{
		skeletonName = "Triangl_Skeleton"; // Set to use above defined skeleton.
		sections[] =
		{
			// Selections from the model that are used in config.cpp for switching textures and materials.
			"camo"
		};
		sectionsInherit = "";		
		class Animations
		{
			class Corner_1_UD //ud for up down
			{
				type			= translationY;
				source			= Corner_1_UD_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -24; // Value of the controller at which the rotation will be angle0
				maxValue		= 24; // Value of the controller at which the rotation will be angle1
				offset0			= -24;
				offset1			= 24;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_1_LR //lr for left right
			{
				type			= translationX;
				source			= Corner_1_LR_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -24; // Value of the controller at which the rotation will be angle0
				maxValue		= 24; // Value of the controller at which the rotation will be angle1
				offset0			= -24;
				offset1			= 24;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_1_FB //FB for forward backwards
			{
				type			= translationZ;
				source			= Corner_1_FB_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_1; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -24; // Value of the controller at which the rotation will be angle0
				maxValue		= 24; // Value of the controller at which the rotation will be angle1
				offset0			= -24;
				offset1			= 24;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_2_UD //ud for up down
			{
				type			= translationY;
				source			= Corner_2_UD_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_2; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -24; // Value of the controller at which the rotation will be angle0
				maxValue		= 24; // Value of the controller at which the rotation will be angle1
				offset0			= -24;
				offset1			= 24;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_2_LR //lr for left right
			{
				type			= translationX;
				source			= Corner_2_LR_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_2; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -24; // Value of the controller at which the rotation will be angle0
				maxValue		= 24; // Value of the controller at which the rotation will be angle1
				offset0			= -24;
				offset1			= 24;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_2_FB //FB for forward backwards
			{
				type			= translationZ;
				source			= Corner_2_FB_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_2; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -24; // Value of the controller at which the rotation will be angle0
				maxValue		= 24; // Value of the controller at which the rotation will be angle1
				offset0			= -24;
				offset1			= 24;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_3_UD //ud for up down
			{
				type			= translationY;
				source			= Corner_3_UD_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_3; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -24; // Value of the controller at which the rotation will be angle0
				maxValue		= 24; // Value of the controller at which the rotation will be angle1
				offset0			= -24;
				offset1			= 24;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_3_LR //lr for left right
			{
				type			= translationX;
				source			= Corner_3_LR_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_3; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -24; // Value of the controller at which the rotation will be angle0
				maxValue		= 24; // Value of the controller at which the rotation will be angle1
				offset0			= -24;
				offset1			= 24;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};
			class Corner_3_FB //FB for forward backwards
			{
				type			= translationZ;
				source			= Corner_3_FB_source; // Controler defined in class AnimationSources in config.cpp.
				selection		= Corner_3; // Selection from p3d that also has to be defined as a bone in this model`s skeleton.
				axis			= ""; // Axis of the rotation.
				memory			= 0;
				minValue		= -24; // Value of the controller at which the rotation will be angle0
				maxValue		= 24; // Value of the controller at which the rotation will be angle1
				offset0			= -24;
				offset1			= 24;
				//angle0			= 0;
				//angle1			= (rad 110); // "rad" converts from degrees to radians
			};

		};
	};
	class cover_0P0009438416449404352_0P04343722427630684: Default {};
	class cover_0P04332611957114163_0P29116161578269617: Default {};
	class cover_0P04545454545454547_0P04545454545454547: Default {};
	class cover_0P04545454545454547_0P13636363636363635: Default {};
	class cover_0P04545454545454547_0P2272727272727273: Default {};
	class cover_0P08085496998194208_0P3939192985791677: Default {};
	class cover_0P13636363636363635_0P04545454545454547: Default {};
	class cover_0P13636363636363635_0P13636363636363635: Default {};
	class cover_0P13636363636363635_0P2272727272727273: Default {};
	class cover_0P13636363636363635_0P3181818181818182: Default {};
	class cover_0P13636363636363635_0P40909090909090906: Default {};
	class cover_0P13636363636363635_0P5: Default {};
	class cover_0P17469273875016822_0P5646839155919902: Default {};
	class cover_0P2272727272727273_0P04545454545454547: Default {};
	class cover_0P2272727272727273_0P13636363636363635: Default {};
	class cover_0P2272727272727273_0P2272727272727273: Default {};
	class cover_0P2272727272727273_0P3181818181818182: Default {};
	class cover_0P2272727272727273_0P40909090909090906: Default {};
	class cover_0P2272727272727273_0P5: Default {};
	class cover_0P2272727272727273_0P5909090909090909: Default {};
	class cover_0P2501621446349076_0P6616216370868464: Default {};
	class cover_0P3181818181818182_0P04545454545454547: Default {};
	class cover_0P3181818181818182_0P13636363636363635: Default {};
	class cover_0P3181818181818182_0P2272727272727273: Default {};
	class cover_0P3181818181818182_0P3181818181818182: Default {};
	class cover_0P3181818181818182_0P40909090909090906: Default {};
	class cover_0P3181818181818182_0P5: Default {};
	class cover_0P3181818181818182_0P5909090909090909: Default {};
	class cover_0P3181818181818182_0P6818181818181819: Default {};
	class cover_0P3383783629131536_0P7498378553650925: Default {};
	class cover_0P40909090909090906_0P04545454545454547: Default {};
	class cover_0P40909090909090906_0P13636363636363635: Default {};
	class cover_0P40909090909090906_0P2272727272727273: Default {};
	class cover_0P40909090909090906_0P3181818181818182: Default {};
	class cover_0P40909090909090906_0P40909090909090906: Default {};
	class cover_0P40909090909090906_0P5: Default {};
	class cover_0P40909090909090906_0P5909090909090909: Default {};
	class cover_0P40909090909090906_0P6818181818181819: Default {};
	class cover_0P40909090909090906_0P7727272727272727: Default {};
	class cover_0P43531608440800984_0P8253072612498318: Default {};
	class cover_0P5_0P04545454545454547: Default {};
	class cover_0P5_0P13636363636363635: Default {};
	class cover_0P5_0P2272727272727273: Default {};
	class cover_0P5_0P3181818181818182: Default {};
	class cover_0P5_0P40909090909090906: Default {};
	class cover_0P5_0P5: Default {};
	class cover_0P5_0P5909090909090909: Default {};
	class cover_0P5_0P6818181818181819: Default {};
	class cover_0P5_0P7727272727272727: Default {};
	class cover_0P49999999999999994_0P8660254037844387: Default {};
	class cover_0P5909090909090909_0P04545454545454547: Default {};
	class cover_0P5909090909090909_0P13636363636363635: Default {};
	class cover_0P5909090909090909_0P2272727272727273: Default {};
	class cover_0P5909090909090909_0P3181818181818182: Default {};
	class cover_0P5909090909090909_0P40909090909090906: Default {};
	class cover_0P5909090909090909_0P5: Default {};
	class cover_0P5909090909090909_0P5909090909090909: Default {};
	class cover_0P5909090909090909_0P6818181818181819: Default {};
	class cover_0P5909090909090909_0P7727272727272727: Default {};
	class cover_0P5646839155919902_0P8253072612498318: Default {};
	class cover_0P6818181818181819_0P04545454545454547: Default {};
	class cover_0P6818181818181819_0P13636363636363635: Default {};
	class cover_0P6818181818181819_0P2272727272727273: Default {};
	class cover_0P6818181818181819_0P3181818181818182: Default {};
	class cover_0P6818181818181819_0P40909090909090906: Default {};
	class cover_0P6818181818181819_0P5: Default {};
	class cover_0P6818181818181819_0P5909090909090909: Default {};
	class cover_0P6818181818181819_0P6818181818181819: Default {};
	class cover_0P6616216370868464_0P7498378553650925: Default {};
	class cover_0P7727272727272727_0P04545454545454547: Default {};
	class cover_0P7727272727272727_0P13636363636363635: Default {};
	class cover_0P7727272727272727_0P2272727272727273: Default {};
	class cover_0P7727272727272727_0P3181818181818182: Default {};
	class cover_0P7727272727272727_0P40909090909090906: Default {};
	class cover_0P7727272727272727_0P5: Default {};
	class cover_0P7727272727272727_0P5909090909090909: Default {};
	class cover_0P7498378553650924_0P6616216370868464: Default {};
	class cover_0P8636363636363636_0P04545454545454547: Default {};
	class cover_0P8636363636363636_0P13636363636363635: Default {};
	class cover_0P8636363636363636_0P2272727272727273: Default {};
	class cover_0P8636363636363636_0P3181818181818182: Default {};
	class cover_0P8636363636363636_0P40909090909090906: Default {};
	class cover_0P8636363636363636_0P5: Default {};
	class cover_0P8253072612498318_0P5646839155919902: Default {};
	class cover_0P9545454545454546_0P04545454545454547: Default {};
	class cover_0P9545454545454546_0P13636363636363635: Default {};
	class cover_0P9545454545454546_0P2272727272727273: Default {};
	class cover_0P9191450300180579_0P3939192985791677: Default {};
	class cover_0P9990561583550596_0P04343722427630684: Default {};
	class cover_0P9566738804288584_0P29116161578269617: Default {};

	
};